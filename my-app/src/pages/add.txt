import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';

const tunisianRegions = [
    "Ariana", "Béja", "Ben Arous", "Bizerte", "Gabès", "Gafsa", "Jendouba",
    "Kairouan", "Kasserine", "Kebili", "Kef", "Mahdia", "Manouba", "Medenine",
    "Monastir", "Nabeul", "Sfax", "Sidi Bouzid", "Siliana", "Sousse", "Tataouine",
    "Tozeur", "Tunis", "Zaghouan"
];

const timeSlots = [
    "6:00 AM - 7:30 AM",
    "7:30 AM - 9:00 AM",
    "9:00 AM - 10:30 AM",
    "10:30 AM - 12:00 PM",
    "12:00 PM - 1:30 PM",
    "1:30 PM - 3:00 PM",
    "3:00 PM - 4:30 PM",
    "4:30 PM - 6:00 PM",
    "6:00 PM - 7:30 PM",
    "7:30 PM - 9:00 PM",
    "9:00 PM - 10:30 PM",
    "10:30 PM - 12:00 AM",
];

function AddStadium() {
    const [slots, setSlots] = useState([]);
    const [selectedSlot, setSelectedSlot] = useState('');
    const [region, setRegion] = useState('');
    const [stadiumName, setStadiumName] = useState('');
    const [stadiumImages, setStadiumImages] = useState([]);
    const [currentImageIndex, setCurrentImageIndex] = useState(0);

    const handleAddSlot = () => {
        if (selectedSlot && !slots.includes(selectedSlot)) {
            setSlots([...slots, selectedSlot]);
            setSelectedSlot('');  // Reset the selected slot after adding it
        }
    };

    const removeSlot = (index) => {
        setSlots(slots.filter((_, i) => i !== index));
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        console.log("Form submitted with:", { stadiumName, region, slots });
        // Add your form submission logic here
    };

    const handleImageUpload = (e) => {
        const files = Array.from(e.target.files);
        const newImages = files.map(file => URL.createObjectURL(file));
        setStadiumImages(prevImages => [...prevImages, ...newImages]);
    };

    // Switch to the next image
    const nextImage = () => {
        setCurrentImageIndex((prevIndex) =>
            prevIndex === stadiumImages.length - 1 ? 0 : prevIndex + 1
        );
    };

    // Switch to the previous image
    const prevImage = () => {
        setCurrentImageIndex((prevIndex) =>
            prevIndex === 0 ? stadiumImages.length - 1 : prevIndex - 1
        );
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-red-800 flex items-start justify-center p-8 pt-32">
            <motion.div
                className="w-full max-w-2xl bg-black/80 p-10 rounded-3xl shadow-lg border border-white/20"
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
            >
                <h1 className="text-4xl font-semibold text-white mb-8 text-center">
                    Add Your Stadium
                </h1>

                <form className="space-y-6" onSubmit={handleSubmit}>
                    <div>
                        <label className="block mb-2 text-sm font-semibold text-gray-300">Stadium Name</label>
                        <input
                            type="text"
                            placeholder="Enter stadium name"
                            className="w-full px-6 py-3 rounded-lg bg-gray-800/90 text-white border border-gray-600 focus:outline-none focus:border-red-500 focus:ring-2 focus:ring-red-500 transition duration-300"
                            value={stadiumName}
                            onChange={(e) => setStadiumName(e.target.value)}
                        />
                    </div>

                    <div>
                        <label className="block mb-2 text-sm font-semibold text-gray-300">Location</label>
                        <select
                            className="w-full px-6 py-3 rounded-lg bg-gray-800/90 text-white border border-gray-600 focus:outline-none focus:border-red-500 focus:ring-2 focus:ring-red-500 transition duration-300"
                            value={region}
                            onChange={(e) => setRegion(e.target.value)}
                        >
                            <option value="" disabled>Select a region</option>
                            {tunisianRegions.map((region) => (
                                <option key={region} value={region}>
                                    {region}
                                </option>
                            ))}
                        </select>
                    </div>

                    {/* Available Time Slots (Select) */}
                    <div>
                        <label className="block mb-2 text-sm font-semibold text-gray-300">Available Time Slots</label>
                        <select
                            className="w-full px-6 py-3 rounded-lg bg-gray-800/90 text-white border border-gray-600 focus:outline-none focus:border-red-500 focus:ring-2 focus:ring-red-500 transition duration-300"
                            value={selectedSlot}
                            onChange={(e) => setSelectedSlot(e.target.value)}
                        >
                            <option value="" disabled>Select a time slot</option>
                            {timeSlots.map((slot, index) => (
                                <option key={index} value={slot}>
                                    {slot}
                                </option>
                            ))}
                        </select>

                        {/* Button to add selected slot */}
                        <button
                            type="button"
                            onClick={handleAddSlot}
                            className="mt-2 w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-3 rounded-full transition duration-300 transform hover:scale-105"
                        >
                            Add Slot
                        </button>
                    </div>

                    {/* Selected Slots List */}
                    <div className="mt-4">
                        <label className="block mb-2 text-sm font-semibold text-gray-300">Selected Time Slots</label>
                        <ul className="space-y-2">
                            {slots.map((slot, index) => (
                                <li key={index} className="flex items-center justify-between text-sm text-gray-300">
                                    {slot}
                                    <button
                                        type="button"
                                        onClick={() => removeSlot(index)}
                                        className="text-red-500 hover:text-red-600 transition duration-200"
                                    >
                                        &times;
                                    </button>
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div>
                        <label className="block mb-2 text-sm font-semibold text-gray-300">Upload Stadium Images</label>
                        <input
                            type="file"
                            className="w-full text-gray-400 file:mr-4 file:py-3 file:px-6 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-red-500 file:text-white hover:file:bg-red-600 transition duration-200"
                            multiple
                            onChange={handleImageUpload}
                        />
                    </div>

                    <motion.button
                        type="submit"
                        className="w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-3 rounded-full transition duration-300 transform hover:scale-105"
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                    >
                        Submit Stadium
                    </motion.button>

                    {/* Move 'Back to Home' button below the 'Submit Stadium' button */}
                    <div className="mt-6 text-center">
                        <Link
                            to="/"
                            className="text-gray-300 hover:text-red-400 transition duration-300"
                        >
                            ← Back to Home
                        </Link>
                    </div>
                </form>
            </motion.div>

            {/* Aside Preview Section */}
            <div className="ml-8 flex-none w-1/3 bg-black/80 p-8 rounded-3xl shadow-lg border border-white/20">
                <h2 className="text-xl font-semibold text-white mb-4">Stadium Preview</h2>
                {stadiumImages.length > 0 && (
                    <div className="mb-4 flex justify-center items-center relative">
                        <button
                            onClick={prevImage}
                            className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white bg-black/50 hover:bg-black/75 rounded-full p-2"
                        >
                            &lt;
                        </button>
                        <img
                            src={stadiumImages[currentImageIndex]}
                            alt={`Stadium Preview ${currentImageIndex + 1}`}
                            className="w-full h-64 object-cover rounded-lg shadow-md"
                        />
                        <button
                            onClick={nextImage}
                            className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white bg-black/50 hover:bg-black/75 rounded-full p-2"
                        >
                            &gt;
                        </button>
                    </div>
                )}
                <div className="text-sm text-gray-300">
                    {stadiumName && <p><strong>Stadium Name:</strong> {stadiumName}</p>}
                    {region && <p><strong>Region:</strong> {region}</p>}
                    <p><strong>Time Slots:</strong></p>
                    <ul className="space-y-1">
                        {slots.map((slot, index) => (
                            <li key={index}>{slot}</li>
                        ))}
                    </ul>
                </div>
            </div>
        </div>
    );
}

export default AddStadium;
